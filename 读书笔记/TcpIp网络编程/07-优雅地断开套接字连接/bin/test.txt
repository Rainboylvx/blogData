Paradox 是我很喜欢的一个游戏公司，在所谓 P 社 5 萌中，十字军之王和钢铁雄心都只有浅尝，但在维多利亚和群星上均投入了大量时间和精力。

这些游戏基于同一套引擎，所以数据文件格式也是共通的。P 社开放了 Mod ，允许玩家来修改游戏，所以数据文件都是明文文本存放在文件系统中，这给了我们一个极好的学习机会：对于游戏从业者，我很有兴趣看看成熟引擎是如何管理游戏数据和游戏逻辑的。

据我所接触到的国内游戏公司，包括我们自己公司在内，游戏数据大都是基于 excel 这种二维表来表达的。我把它称为 csv 模式。这种模式的特点是，基础数据结构基于若干张二维表，每张表有不确定的行数，但每行有固定了列数。用它做基础数据结构的缺陷是很明显的，比如它很难表达树状层级结构。这往往就依赖做一个中间层，规范一些使用格式，在其上模拟出复杂数据结构。

另一种在软件行业广泛使用的基础数据结构是 json/xml 模式。json 比 xml 要简单。它的特点就是定义了两种基础的复合结构，字典和数组，允许结构嵌套。基于这种模式管理游戏数据的我也见过一些。不过对于策划来说，编辑树结构的数据终究不如 excel 拉表方便。查看起来也没有特别好的可视化工具，所以感觉用的人要少一些。

最开始，我以为 P 社的数据文件是偏向于后一种 json 模式。但实际研究下来又觉得有很大的不同。今天我尝试用 lpeg 写了一个简单的 parser 试图把它读进 lua vm ，写完 parser 后突然醒悟过来，其实它就是基于的嵌套 list ，不正是 lisp 吗？想明白这点后，有种醍醐灌顶的感觉，的确 lisp 模式要比 json 模式简洁的多，并不比 csv 模式复杂。但表达能力却强于它们两者，的确是一个更好的数据组织方案。