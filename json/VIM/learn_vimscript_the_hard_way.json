{"data":{"_id":"40214179b5","title":"learn_vimscript_the_hard_way","date":"2022-08-08 22:02","update":"2022-08-08 22:02","author":"Rainboy","tags":["vim","vimscript"],"catalog":"学习笔记"},"__content":"<h1 id=\"learn-vimscript-the-hard-way-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0\" tabindex=\"-1\">Learn Vimscript The Hard Way 读书笔记</h1>\n<h2 id=\"%E5%89%8D%E8%A8%80\" tabindex=\"-1\">前言</h2>\n<p>一直想要学习vimL,这样可以加深对Vim的理解, Learn Vimscript The Hard Way 这本书本质上是一本vimscript的教程.</p>\n<p>你可以在 <a href=\"https://github.com/blogData/VIM/vimscripts\">https://github.com/blogData/VIM/vimscripts</a> 这里找到我写的学习中产生的vimscript</p>\n<p>书本要求我们</p>\n<ol>\n<li>you need to <strong>TYPE ALL THE COMMANDS</strong></li>\n<li>you need to <strong>DO ALL THE EXERICESES</strong></li>\n</ol>\n<h2 id=\"prerequisties\" tabindex=\"-1\">Prerequisties</h2>\n<ol>\n<li>kown <code>buffer</code>,<code>window</code>,<code>normal mode</code>,<code>insert mode</code>,<code>text object</code></li>\n<li>create a vimrc file</li>\n</ol>\n<ul>\n<li>to easily find the location and name of the file on any operating system,use<code>echo $MYVIMRC</code></li>\n</ul>\n<h2 id=\"1-echoing-message\" tabindex=\"-1\">1 Echoing Message</h2>\n<h3 id=\"1.2-how-to-print-something\" tabindex=\"-1\">1.2 how to print something</h3>\n<ul>\n<li><code>echo</code> ,will not save messages</li>\n<li><code>echom</code>,will save messages</li>\n<li><code>messages</code>,show history messages</li>\n</ul>\n<p><code>echom</code>will save the output and let you run <code>:messages</code> to view it later.</p>\n<h3 id=\"1.2-comments\" tabindex=\"-1\">1.2 comments</h3>\n<pre><code class=\"language-plaintext\">&quot; this is comment\n</code></pre>\n<h3 id=\"1.3-exercises\" tabindex=\"-1\">1.3 exercises</h3>\n<p>::: details</p>\n<pre><code>nnoremap &lt;space&gt; za\necho &quot;&gt;^.^&lt;&quot;\n</code></pre>\n<p>:::</p>\n<h2 id=\"2-setting-options\" tabindex=\"-1\">2 setting options</h2>\n<h3 id=\"2.1-boolean-options\" tabindex=\"-1\">2.1 boolean options</h3>\n<pre><code class=\"language-plaintext\">set number\nset nonumber\nset number! &quot; toggling boolean options\n&quot; how to know wath an option is currently set to by using a ?\nset number?\n</code></pre>\n<p>all boolean options work this way <code>:set &lt;name&gt;</code> turns the options on and <code>:set no&lt;name&gt;</code> turns it off.</p>\n<h3 id=\"2.4-options-with-values\" tabindex=\"-1\">2.4 options with values</h3>\n<pre><code class=\"language-plaintext\">set number\n\n&quot; the numberwidth options changes how wide the column containing line numbers \n&quot; will be.\nset numberwidth=10\nset numberwidth=4\nset numberwidth?\n</code></pre>\n<h3 id=\"2.5-setting-multiple-options-at-once\" tabindex=\"-1\">2.5 setting multiple options at once</h3>\n<pre><code class=\"language-plaintext\">set numberwidth=2\nset nonumber\nset number numberwidth=4\n&quot;both options were set and took effect in the last command\n</code></pre>\n<p>::: details</p>\n<pre><code class=\"language-plaintext\">nnoremap &lt;space&gt; za\n&quot;echo &quot;&gt;^.^&lt;&quot;\nset number relativenumber numberwidth=2\nset wrap\nset shiftround &quot;round indent to multiple of 'shiftwidth'\n\n\n\n&quot;set showmatch matchtime=10 \n&quot;when bracket is inserted,briefly jump to the matchone. \n&quot;the jump is only done if the match can be seen on the screen.\n</code></pre>\n<p>:::</p>\n<h2 id=\"3-basic-mapping\" tabindex=\"-1\">3 Basic Mapping</h2>\n<pre><code class=\"language-plaintext\">map - x  &quot; - 映射成 x\nmap - dd\n</code></pre>\n<h3 id=\"3.3-exercises\" tabindex=\"-1\">3.3 exercises</h3>\n<p>::: details</p>\n<pre><code class=\"language-plaintext\">map - ddp\nmap _ ddkP\n</code></pre>\n<p>:::</p>\n<ul>\n<li>how to remove a mapping :<code>unmap [key]</code></li>\n</ul>\n<h2 id=\"4-modal-mapping\" tabindex=\"-1\">4 modal mapping</h2>\n<ul>\n<li>nmap,normal modal</li>\n<li>vmap,visual modal</li>\n<li>imap,insert modal</li>\n</ul>\n<pre><code class=\"language-plaintext\">imap &lt;c-d&gt; &lt;esc&gt;ddi\n</code></pre>\n<h2 id=\"5-strict-mapping\" tabindex=\"-1\">5 strict mapping</h2>\n<pre><code class=\"language-plaintext\">nmap dd O&lt;esc&gt;jddk&quot; recursive\n</code></pre>\n<ul>\n<li>Open a line</li>\n<li>exit insert mode</li>\n<li>move down a line</li>\n<li>but <code>dd</code> is mapped,so perform the above mapping,never finish!</li>\n</ul>\n<pre><code class=\"language-plaintext\">nmap x dd\nnnoremap \\ x\n</code></pre>\n<p><strong>Always use nonrecursive map</strong></p>\n<h2 id=\"6-leaders\" tabindex=\"-1\">6 leaders</h2>\n<p>pick a key as a <strong>prefix</strong> key</p>\n<pre><code class=\"language-plaintext\">nnoremap -d dd\nnnoremap -c ddO\nlet mapleader = &quot;-&quot;\nnnoremap &lt;leader&gt;d dd\n</code></pre>\n<p>you can use <code>&lt;leader&gt;</code> to mean &quot;whatever i have my leader key set to&quot;</p>\n<h3 id=\"local-leader\" tabindex=\"-1\">local leader</h3>\n<p>only take effect for certain types of files.(for this buffer ?)</p>\n<pre><code class=\"language-plaintext\">let maplocalleader = &quot;\\\\&quot;\nnnoremap &lt;buffer&gt; &lt;localleader&gt;d dd\n</code></pre>\n<h2 id=\"7-editing-your-vimrc\" tabindex=\"-1\">7 Editing Your Vimrc</h2>\n<p>Find a way to make it easier to add new mappings to vimrc files.</p>\n<pre><code class=\"language-viml\"># split quickly to edit vimrc\nnnoremap &lt;leader&gt;ev :vsplit $MYVIMRC&lt;cr&gt;\n# source vimrc quickly\nnnoremap &lt;leader&gt;sv :source $MYVIMRC&lt;cr&gt;\n</code></pre>\n<p>quickly write and quit in normal mode: <kbd>ZZ</kbd></p>\n<h2 id=\"8-abbreviations\" tabindex=\"-1\">8 Abbreviations</h2>\n<p>Abbreviations are useful in day-to-day text editing.</p>\n<p>I think abbrev are useful for code snippets.</p>\n<h2 id=\"9-more-mapping\" tabindex=\"-1\">9 More Mapping</h2>\n<pre><code class=\"language-viml\">nnoremap &lt;leader&gt;&quot; viw&lt;esc&gt;a&quot;&lt;esc&gt;hbi&quot;&lt;esc&gt;lel\n\n&quot;disable the escape key in insert mode\n</code></pre>\n<h2 id=\"10-training-your-fingers\" tabindex=\"-1\">10 Training Your Fingers</h2>\n<pre><code class=\"language-viml\">inoremap &lt;esc&gt; &lt;nop&gt;\n</code></pre>\n<h3 id=\"exercises\" tabindex=\"-1\">exercises</h3>\n<pre><code class=\"language-viml\">inoremap &lt;left&gt; &lt;nop&gt;\nnnoremap &lt;left&gt; &lt;nop&gt;\ninoremap &lt;right&gt; &lt;nop&gt;\nnnoremap &lt;right&gt; &lt;nop&gt;\n</code></pre>\n<h2 id=\"11-buffer-local-options-and-mapping\" tabindex=\"-1\">11 Buffer-Local Options and Mapping</h2>\n<p>set map,Abbreviations,options in each buffer.</p>\n<pre><code class=\"language-viml\">nnoremap          &lt;leader&gt;d dd\nnnoremap &lt;buffer&gt; &lt;leader&gt;x dd\n</code></pre>\n<p>THE <code>&lt;buffer&gt;</code> in the second nnoremap command told vim to only consider that mapping when we're in the buffer where defined it.</p>\n<p>we should use <code>&lt;localleader&gt;</code> instead of <code>&lt;leader&gt;</code></p>\n<h2 id=\"53-autoloading\" tabindex=\"-1\">53 Autoloading</h2>\n<p><code>autoload/path/some.vim</code></p>\n<p>e,<code>autoload</code> -&gt; <code>delay loading</code></p>\n<pre><code class=\"language-vimL\">call somefile#Hello()\n</code></pre>\n<p>vim will look for a called <code>autoload/somefile.vim</code></p>\n"}