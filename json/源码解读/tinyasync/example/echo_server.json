{"data":{},"__content":"<p><code>example/echo_server</code>运行分析</p>\n<pre><code class=\"language-plaintext\">定义ctx\nlisten(ctx)\nctx.run()\n</code></pre>\n<ol start=\"0\">\n<li>IoContext的整体框架是什么?</li>\n<li>类Acceptor做了什么事?</li>\n<li>acceptor.async_accept做了什么事?</li>\n<li><code>co_spawn</code>运行的规则,</li>\n</ol>\n<h2 id=\"0.-iocontext%E7%9A%84%E6%95%B4%E4%BD%93%E6%A1%86%E6%9E%B6%E6%98%AF%E4%BB%80%E4%B9%88%3F\" tabindex=\"-1\">0. IoContext的整体框架是什么?</h2>\n<p>先看一下<code>epoll_event</code>的定义</p>\n<pre><code class=\"language-plaintext\">epoll_event\n\nstruct ioEvent : public epoll_event ; \nioEvent 就是 epoll_event\n</code></pre>\n<h2 id=\"1.-%E7%B1%BBacceptor%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%E4%BA%8B%3F\" tabindex=\"-1\">1. 类Acceptor做了什么事?</h2>\n<h2 id=\"2.-acceptor.async_accept%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%E4%BA%8B%3F\" tabindex=\"-1\">2. acceptor.async_accept做了什么事?</h2>\n<h2 id=\"3.-co_spawn%E8%BF%90%E8%A1%8C%E7%9A%84%E8%A7%84%E5%88%99%2C\" tabindex=\"-1\">3. <code>co_spawn</code>运行的规则,</h2>\n<h2 id=\"%E6%80%BB%E7%BB%93\" tabindex=\"-1\">总结</h2>\n<p>一个单线程的echo服务器</p>\n"}