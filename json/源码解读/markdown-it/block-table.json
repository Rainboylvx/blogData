{"data":{},"__content":"<p>block_state</p>\n<p>属性</p>\n<pre><code class=\"language-plaintext\">\n  this.tokens = tokens\n\n  this.bMarks = [] //每一行的起始位置\n  this.eMarks = [] //每一行的结束位置\n  this.tShift = [] //这一行的,第一个非空字符的偏移位置\n  this.sCount = [] //对应行 space count (tab expanded)\n\n  //行开头虚拟的空格\n  //作为hack存在,blockquotes会重写 bMarks,在执行的时候丢失对应的信息\n  // 只有在expand tab 时候有用\n  this.bsCount = [] //通常为0\n\n  this.blkIndent  = 0 // block indent\n\n  this.line       = 0 // 第几行\n  this.lineMax    = 0 // 一共有多少行\n  this.tight      = false // list mod 1. loose 2 tight\n  this.ddIndent   = -1 // for dd block\n  this.listIndext = -1 // for list block\n\n  // 可能 blockquote list root paragraph reference\n  // 在list中使用时,可以判断是否打断 paragraph\n  this.parentType = 'root'\n\n  this.level  ?\n\n</code></pre>\n<h2 id=\"tokenize\" tabindex=\"-1\">tokenize</h2>\n<h3 id=\"1.-table%E8%A7%A3%E6%9E%90%E7%9A%84%E8%A7%84%E5%88%99\" tabindex=\"-1\">1. table解析的规则</h3>\n<p>参数</p>\n<ul>\n<li>state 状态</li>\n<li>startLine 起始行</li>\n<li>endLine 终止行</li>\n<li>silent ,沉默? 表示解析后加入token</li>\n</ul>\n<p>返回值,true 表示是否解析成功</p>\n<p><a href=\"https://www.markdownguide.org/extended-syntax/#tables\">table语法</a></p>\n<ol>\n<li>创建一个table,由hyphens and pips 组成</li>\n<li>alignment, <code>:---, :---:,---:</code></li>\n<li>format cell text</li>\n<li>escape pipe char <code>&amp;#124;</code></li>\n</ol>\n<p>代码实现的具体规则,按顺序</p>\n<ol start=\"0\">\n<li>起始行第0行是header,所以nextLine就是 column 行</li>\n<li>到少要有两行,因为 header + columns 要有两行</li>\n<li>常规查检: 在要求的blkIndent内</li>\n<li>\n<blockquote>\n<p>=4个空格就是code block</p>\n</blockquote>\n</li>\n<li>第二行不能是空行</li>\n<li>检查table的第二行</li>\n<li>起始字符是<code>- | :</code>之一</li>\n<li>不能只有一个字符</li>\n<li>第二字符只能是<code>- | :,空白字符</code>之一</li>\n<li>第一个字符是<code>-</code>,那第二个字符就必须不是空白</li>\n<li>后面的字符只能是<code>- | : 空白</code>之一</li>\n</ol>\n<pre><code>/ ^[-:|][-:|\\s]*$ /\n|||| ok\n-|--|--| ok\n-||||| ok\n:||||| ok\n</code></pre>\n<ol start=\"6\">\n<li>检查<code>|</code>中间的串,并确定align</li>\n<li>检查首行</li>\n<li>常规查检: 在要求的blkIndent内</li>\n<li>必须含有<code>|</code></li>\n<li>和第二行匹配</li>\n<li>进行tokenize</li>\n</ol>\n<ul>\n<li>7.1 parentType= 'table'</li>\n</ul>\n<pre><code>table_oepn \nthead_open\ntr_open\nfor:\n  th_open\n  inline(columns)\n  th_close\ntr_close\nthead_close\ntable_close \n</code></pre>\n<ul>\n<li>7.2 一行一行检查tbody</li>\n</ul>\n<pre><code>tbody_open\ntr_open\nfor:\n  td_open\n  columns[i]\n  td_close\ntr_close\nif tbodyLines 如果tbody 存在,存的tbody 对就的行,对应tbody_open token.map\n  tbody_close\n</code></pre>\n<ul>\n<li>7.3 ? terminatorRules -&gt; blockquote: fence,blockquote,hr,list,html_block,heading</li>\n</ul>\n<h3 id=\"2.-code%E8%A7%A3%E6%9E%90%E7%9A%84%E8%A7%84%E5%88%99\" tabindex=\"-1\">2. code解析的规则</h3>\n<p>很简单</p>\n<p>连续的多个&gt;=4个空格的(包含窄)行就是code</p>\n<p>特点,没有silent</p>\n<h3 id=\"3.-fence%E8%A7%A3%E6%9E%90%E7%9A%84%E8%A7%84%E5%88%99\" tabindex=\"-1\">3. fence解析的规则</h3>\n<ol>\n<li>不能多于4个空格</li>\n<li>首行至少有3个字符</li>\n<li>首个字符是`~ ``之一</li>\n<li>连续的mark大于3</li>\n<li>params里不能```</li>\n<li>创建token</li>\n</ol>\n<ul>\n<li>6.1 结束的可能情况</li>\n<li>整个md文件结束</li>\n<li>当前行非空,且 不在 blkIndent 内,应该是特殊的一种list,list内的fence</li>\n<li>对应的fence endMark</li>\n</ul>\n<h3 id=\"4.-blockquote%E8%A7%A3%E6%9E%90%E7%9A%84%E8%A7%84%E5%88%99\" tabindex=\"-1\">4. blockquote解析的规则</h3>\n<ol>\n<li>常规查检 在blkIndent内</li>\n<li>首个字符是<code>&gt;</code></li>\n</ol>\n"}