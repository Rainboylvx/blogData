{"data":{},"__content":"<pre><code>std::atomic_flag is an atomic boolean type. Unlike all specializations of std::atomic, it is guaranteed to be lock-free. Unlike std::atomic&lt;bool&gt;, std::atomic_flag does not provide load or store operations.\n</code></pre>\n<p>保证是无锁的</p>\n<h2 id=\"operations\" tabindex=\"-1\">operations</h2>\n<ul>\n<li>clear 原子的设定为false</li>\n<li>test_and_set 原子的设定为true</li>\n</ul>\n<p>std::atomic_flag 标志，如果 std::atomic_flag 之前没有被设置过，则设置 std::atomic_flag 的标志，并返回先前该 std::atomic_flag 对象是否被设置过，如果之前 std::atomic_flag 对象已被设置，则返回 true，否则返回 false。</p>\n<pre><code>\n   +-------+                  +-------+\n   | false | -test and_set-&gt;  | true  |\n   +-------+       |          +-------+\n                   |\n                   v\n                 返回false\n\n</code></pre>\n<p>作用: 可以保证只有一个线程在处理这个资源</p>\n<p>是互斥自旋转锁</p>\n<p><a href=\"https://en.cppreference.com/w/cpp/atomic/atomic_flag\">std::atomic_flag - cppreference.com</a></p>\n"}