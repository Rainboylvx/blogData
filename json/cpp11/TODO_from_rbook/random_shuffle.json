{"data":{"_id":"accd98ad3a","title":"random_shuffle","date":"2020-10-17 09:10","update":"2020-10-17 09:10","author":"Rainboy"},"__content":"<p>@[toc]</p>\n<h2 id=\"%E4%BD%BF%E7%94%A8random_shuffle()%E7%AE%97%E6%B3%95\" tabindex=\"-1\">使用random_shuffle()算法</h2>\n<p><code>random_shuffle</code>包含在<code>&lt;algorithm&gt;</code>头文件中</p>\n<p>可以使用C++中的<code>random_shuffle()</code>算法对数组进行乱序。与生成单个随机数时一样，程序在调用<code>random_shuffle()</code>之前为随机数生成器确定种子。</p>\n<p><strong>注:</strong><code>random_shuffle()</code>只能支持<strong>随机访问迭代器</strong>的容器,不用于<code>list</code></p>\n<p><strong>使用:</strong></p>\n<pre><code class=\"language-c\">std::random_device rd; //随机种子\nstd::mt19937 rnd(rd());\nrandom_shuffle(v.begin(), v.end(),rnd); //vector\nrandom_shuffle(a,a+sizof(a)/sizof(a[0]),rnd);//数组\n</code></pre>\n<pre><code class=\"language-c\">#include &lt;random&gt;\n#include &lt;algorithm&gt;\n#include &lt;iterator&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n    std::vector&lt;int&gt; v = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\n    std::random_device rd;\n    std::mt19937 g(rd());\n\n    std::shuffle(v.begin(), v.end(), g);\n\n    for(int i = 0;i &lt; v.size();i++)\n        std::cout &lt;&lt; v[i] &lt;&lt; ' ';\n    std::cout &lt;&lt; &quot;\\n&quot;;\n}\n</code></pre>\n<h3 id=\"%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0---%E6%B2%A1%E6%9C%89%E5%86%99%E5%AE%8C\" tabindex=\"-1\">自己实现 --没有写完</h3>\n<p>让我们看看C++的程序，下面的程序是给直接在数组中进行乱序，每次随机选择一个位置，把它与最后一\n个位置的数据对换，直到结束。</p>\n<p>如果能生成0-n不重复的随机数字,不就OK了</p>\n<pre><code class=\"language-c\">void randArray(void)\n{\nint t=0;\n\nfor(int i=0;i&lt;LEN;i++)\n{\na[i]=i+1;\n}\n\nfor(int i=0;i&lt;LEN;i++)\n{\nt=rand()%LEN;\nswap(a[i],a[t]);\n}\n}\n</code></pre>\n"}