{"data":{},"__content":"<h1 id=\"%E7%90%86%E8%A7%A3%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%92%8C%E5%A5%97%E6%8E%A5%E5%AD%97\" tabindex=\"-1\">理解网络编程和套接字</h1>\n<h2 id=\"%E6%9E%84%E5%BB%BA%E5%A5%97%E6%8E%A5%E5%AD%97\" tabindex=\"-1\">构建套接字</h2>\n<p>整个流程</p>\n<p><img src=\"./socket.png\" alt=\"\"></p>\n<pre><code>#include&lt;sys/socket.h&gt;\n\nint socket(int domain, int type, int protocol);\n//成功时返回文件描述符，失败时返回-1\n</code></pre>\n<h2 id=\"%E5%88%86%E9%85%8D%E5%9C%B0%E5%9D%80%E4%BF%A1%E6%81%AF\" tabindex=\"-1\">分配地址信息</h2>\n<pre><code>#include&lt;sys/socket.h&gt;\nint bind(int sockfd, struct sockaddr* pSockAddr, socklen_t addrLen);\n//成功时返回0， 失败时返回-1\n</code></pre>\n<h2 id=\"%E8%AE%BE%E7%BD%AE%E7%9B%91%E5%90%AC\" tabindex=\"-1\">设置监听</h2>\n<pre><code>#include&lt;sys/socket.h&gt;\n\nint listen(int sockfd, int backlog);\n//成功时返回0， 失败时返回-1\n</code></pre>\n<h2 id=\"%E5%8F%97%E7%90%86%E8%BF%9E%E6%8E%A5\" tabindex=\"-1\">受理连接</h2>\n<pre><code>#include&lt;sys/socket.h&gt;\n\nint accept(int sockfd, struct sockaddr* pSockAddr, socklen_t* pAddrLen);\n//成功时返回文件描述符，失败时返回-1\n</code></pre>\n<h2 id=\"%E8%AF%B7%E6%B1%82%E8%BF%9E%E6%8E%A5\" tabindex=\"-1\">请求连接</h2>\n<pre><code>#include&lt;sys/socket.h&gt;\n\nint connect(in sockfd, struct sockaddr* pSockAddr, socklen_t sockLen);\n//成功时返回0， 失败时返回-1\n</code></pre>\n<h2 id=\"%E4%B8%A4%E4%B8%AA%E5%AE%9E%E9%99%85%E7%9A%84%E4%BE%8B%E5%AD%90\" tabindex=\"-1\">两个实际的例子</h2>\n<ul>\n<li><a href=\"./hello_server.c\" target=\"\">hello_server.c</a></li>\n<li><a href=\"./hello_client.c\" target=\"\">hello_client.c</a></li>\n</ul>\n<h1 id=\"%E5%9F%BA%E4%BA%8Elinux%E7%9A%84%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C\" tabindex=\"-1\">基于Linux的文件操作</h1>\n<p>linux中一切皆文件,socket也是一种文件,可以认为是一种文件描述符.操作socket就和操作文件一样.</p>\n<h2 id=\"%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6\" tabindex=\"-1\">系统文件描述符</h2>\n<p>所谓的文件描述符(file descriptor)是系统分配给一个进行中打开的文件的或socket对应的整数.也就是说这个整数,代表一个文件.\n至于代码哪个文件,记录在系统的内核里.</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">文件描述符</th>\n<th style=\"text-align:center\">对象</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">标准输入：stdin</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">标准输出：stdout</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">标准错误：stderr</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6\" tabindex=\"-1\">打开文件</h2>\n<pre><code>#include&lt;fcntl.h&gt;\n\nint open(const char* path, int flag);\n//成功时返回文件描述符， 失败时返回-1\n</code></pre>\n<ul>\n<li>path: 文件路径</li>\n<li>flag: 文件打开模式信息</li>\n</ul>\n<h3 id=\"%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E6%A8%A1%E5%BC%8F%E5%A6%82%E4%B8%8B%E8%A1%A8%EF%BC%9A\" tabindex=\"-1\">文件打开模式如下表：</h3>\n<hr>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">打开模式</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">O_CREAT</td>\n<td style=\"text-align:center\">必要时创建文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">O_TRUNC</td>\n<td style=\"text-align:center\">删除全部现有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">O_APPEND</td>\n<td style=\"text-align:center\">维持现有数据，追加到后面</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">O_RDONLY</td>\n<td style=\"text-align:center\">以只读方式打开</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">O_WRONLY</td>\n<td style=\"text-align:center\">以只写方式打开</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">O_RDWR</td>\n<td style=\"text-align:center\">以读写方式打开</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"%E5%85%B3%E9%97%AD%E6%96%87%E4%BB%B6\" tabindex=\"-1\">关闭文件</h2>\n<pre><code>#include&lt;unistd.h&gt;\n\nint close(int fd);\n//成功时返回0， 失败时返回-1\n</code></pre>\n<h2 id=\"%E5%B0%86%E6%95%B0%E6%8D%AE%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6\" tabindex=\"-1\">将数据写入文件</h2>\n<pre><code>#include&lt;unistd.h&gt;\n\nssize_t write(int fd, const void* buf, size_t nBytes);\n//成功时返回写入的字节数，失败时返回-1\n</code></pre>\n<h2 id=\"%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE\" tabindex=\"-1\">读取文件中的数据</h2>\n<pre><code>#include&lt;unistd.h&gt;\n\nssize_t read(int fd, void* buf, size_t nBytes);\n//成功时返回读到的字节数（若遇到文件结尾则返回0），失败时返回-1\n</code></pre>\n"}