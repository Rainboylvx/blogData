{"data":{},"__content":"<p>目的: 有时候，可能有这样一种情况：即通过访问一个 http 请求，运行一下某台远程机器上的一个 shell 脚本，比如：用来启动一个测试，用来发送一个邮件，或者短信通知一下管理员，诸如此类的一个任务，等等；</p>\n<p>什么是cgi：</p>\n<p>Common Gateway Interface，简称CGI。在物理上是一段程序，运行在服务器上，提供同客户端HTML页面的接口。（百度百科）</p>\n<p>CGI是一种协义,规定了应该传递的格式</p>\n<p>什么是fastcgi?</p>\n<blockquote>\n<p>那么CGI相较于Fastcgi而言其性能瓶颈在哪呢？CGI针对每个http请求都是fork一个新进程来进行处理，处理过程包括解析php.ini文件，初始化执行环境等，然后这个进程会把处理完的数据返回给web服务器，最后web服务器把内容发送给用户，刚才fork的进程也随之退出。 如果下次用户还请求动态资源，那么web服务器又再次fork一个新进程，周而复始的进行。而Fastcgi则会先fork一个master，解析配置文件，初始化执行环境，然后再fork多个worker。当请求过来时，master会传递给一个worker，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然是高。而且当worker不够用时，master可以根据配置预先启动几个worker等着；当然空闲worker太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是Fastcgi的对进程的管理。大多数Fastcgi实现都会维护一个进程池。注：swoole作为httpserver，实际上也是类似这样的工作方式。\n来自 如何通俗地解释 CGI、FastCGI、php-fpm 之间的关系？ - Journey Lin的回答 - 知乎\n<a href=\"https://www.zhihu.com/question/30672017/answer/127048585\">https://www.zhihu.com/question/30672017/answer/127048585</a></p>\n</blockquote>\n<p><a href=\"https://www.nginx.com/resources/wiki/start/topics/examples/fcgiwrap/\">fcgiwrap</a>,则是一个\n对fastcgi协议实现的程序</p>\n<p>spwan-cgi,<a href=\"https://github.com/lighttpd/spawn-fcgi\">GitHub - lighttpd/spawn-fcgi: spawn-fcgi on github for easier collaboration - main repo still on lighttpd.net</a>,一个大概600行左右的\n则是一个可以让<code>fcgiwrap</code>在端口上监听</p>\n<h2 id=\"fcgiwrap-%E5%90%AF%E5%8A%A8%E4%B8%8E%E9%85%8D%E7%BD%AE\" tabindex=\"-1\">fcgiwrap 启动与配置</h2>\n<p>来自: <a href=\"https://zhuanlan.zhihu.com/p/372452886\">fcgiwrap 启动配置 - 知乎</a></p>\n<p>启动程序,创建一个用于传递数据的socket文件</p>\n<pre><code class=\"language-plaintext\">$ fcgiwrap -f -s unix:/home/cai/opt/fcigwrap/var/fcgiwrap.socket &amp;\n</code></pre>\n<p>设置nginx配置</p>\n<pre><code class=\"language-plaintext\">location / {\n    fastcgi_param       SCRIPT_FILENAME     &quot;/home/cai/opt/bin/hello.sh&quot;;\n    fastcgi_param       PATH_INFO           $uri;\n    fastcgi_param       QUERY_STRING        $args;\n    fastcgi_param       HTTP_HOST           $server_name;\n    fastcgi_pass        unix:/var/run/fcgiwrap.socket;\n    include             fastcgi_params;     # 必须放在最后\n}\n</code></pre>\n<h2 id=\"%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE\" tabindex=\"-1\">安装与配置</h2>\n<p>安装</p>\n<pre><code>sudo pacman -S nginx fcgiwrap spwan-fcgi\n</code></pre>\n<p>根据<code>fastcgi.conf</code>里的内容,我们可以通过类似<code>c</code>的<code>getenv</code>得到相应的环境变量,进而得到\n相应的参数</p>\n<pre><code class=\"language-plaintext\">fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;\nfastcgi_param  QUERY_STRING       $query_string;\nfastcgi_param  REQUEST_METHOD     $request_method;\nfastcgi_param  CONTENT_TYPE       $content_type;\nfastcgi_param  CONTENT_LENGTH     $content_length;\n\nfastcgi_param  SCRIPT_NAME        $fastcgi_script_name;\nfastcgi_param  REQUEST_URI        $request_uri;\nfastcgi_param  DOCUMENT_URI       $document_uri;\nfastcgi_param  DOCUMENT_ROOT      $document_root;\nfastcgi_param  SERVER_PROTOCOL    $server_protocol;\nfastcgi_param  REQUEST_SCHEME     $scheme;\nfastcgi_param  HTTPS              $https if_not_empty;\n\nfastcgi_param  GATEWAY_INTERFACE  CGI/1.1;\nfastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;\n\nfastcgi_param  REMOTE_ADDR        $remote_addr;\nfastcgi_param  REMOTE_PORT        $remote_port;\nfastcgi_param  SERVER_ADDR        $server_addr;\nfastcgi_param  SERVER_PORT        $server_port;\nfastcgi_param  SERVER_NAME        $server_name;\n\n# PHP only, required if PHP was built with --enable-force-cgi-redirect\nfastcgi_param  REDIRECT_STATUS    200;\n</code></pre>\n<h2 id=\"%E4%BD%BF%E7%94%A8nodejs%E4%BD%9C%E4%B8%BAcgi%E7%A8%8B%E5%BA%8F\" tabindex=\"-1\">使用nodejs作为cgi程序</h2>\n<p><a href=\"https://juejin.cn/post/7084157548143575077\">Nginx + fcgiwrap + nodejs + zx 搭建便捷服务端 API - 掘金</a></p>\n<h2 id=\"%E5%8F%82%E8%80%83\" tabindex=\"-1\">参考</h2>\n<p>使用nodejs作为cgi程序</p>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/372452886\">fcgiwrap 启动配置 - 知乎</a></li>\n<li><a href=\"https://www.nginx.com/resources/wiki/start/topics/examples/fcgiwrap/\">FCGI Wrap | NGINX</a>使用nodejs作为cgi程序</li>\n</ul>\n"}