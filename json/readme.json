{"data":{},"__content":"<h1 id=\"%E6%88%91%E7%9A%84blog\" tabindex=\"-1\">我的blog</h1>\n<p>这里是我的Blog(Rainboy)</p>\n<p><a href=\"http://blog.roj.ac.cn\">http://blog.roj.ac.cn</a></p>\n<h2 id=\"%E4%BD%BF%E7%94%A8\" tabindex=\"-1\">使用</h2>\n<ol>\n<li>clone 本仓库</li>\n<li><code>yarn install</code></li>\n<li>查看 <code>yarn dev</code></li>\n<li>编译 <code>yarn build</code></li>\n</ol>\n<h2 id=\"%E6%80%9D%E8%B7%AF\" tabindex=\"-1\">思路</h2>\n<ul>\n<li>使用vue作为 side-nav(侧边目录树)</li>\n<li>localStorage 保留</li>\n</ul>\n<p>工具链</p>\n<ul>\n<li>文章检索<a href=\"https://github.com/olivernn/lunr.js/\">lunr.js</a></li>\n<li>markdown-it,markdown渲染  +</li>\n</ul>\n<h2 id=\"%E6%88%91\" tabindex=\"-1\">我</h2>\n<p><img src=\"https://github.com/rainboylvx.png\" alt=\"Rainboy\"></p>\n<h2 id=\"%E6%88%91%E7%9A%84%E7%9B%AE%E7%9A%84\" tabindex=\"-1\">我的目的</h2>\n<p>写了博客,很长时间了,其时blog对我来就是一个笔记,方便我需要的时候来查找.</p>\n<p>用过hexo,但是不方便查找,对我来说太复杂,</p>\n<p>也用了vitepress,源码太复杂,看不懂,不是我的习惯(看不懂源码的东西少用)</p>\n<p>还是自己实现一个简单的,静态blog生成的项目吧</p>\n<p>Demo : <a href=\"https://blog.roj.ac.cn\">https://blog.roj.ac.cn</a></p>\n<h2 id=\"%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\" tabindex=\"-1\">使用方式</h2>\n<p>创建一个自己的blog,目录如下</p>\n<pre><code>+myblog\n├── 学习笔记\n│   ├── 笔记1.md\n│   └── 笔记2.md\n└── 源码分析\n    └── nginx\n        └── index.md\n</code></pre>\n<p>安装staticWebGen</p>\n<pre><code>yarn global add https://github.com/rbookr/staticBlogGen\n</code></pre>\n<p>使用</p>\n<pre><code>cd myblog\nstaticWebGen \n</code></pre>\n<p>就会生成一个<code>myblog/dist</code>目录</p>\n<p>配置文件 <code>staticWebGen.config.yaml</code></p>\n<pre><code class=\"language-plaintext\"># 忽略的目录\nignores:\n  - &quot;dist/&quot; # 不扫描dist/目录\n\n# 忽略的md文件\nignores_md:\n  - &quot;_*&quot; # 以_开头的md文件\n  - reg1\n</code></pre>\n<pre><code>python3 -m http.server 8888\n</code></pre>\n<p>访问<code>http://127.0.0.1:8888/dist/index.html</code>,查看结果</p>\n<h2 id=\"%E6%B8%B2%E6%9F%93%E6%96%B9%E5%BC%8F\" tabindex=\"-1\">渲染方式</h2>\n<p>有两种方式,</p>\n<ol>\n<li>在创建时,把每一个md文件渲染,优点,</li>\n</ol>\n<ul>\n<li>部署网站后,访问速度快</li>\n<li>可以直接静态部署,不需要服务器\n缺点</li>\n<li>如果md文件多,可以渲染在时间长(基本上你应该没有1万个以上的md文件),</li>\n</ul>\n<ol start=\"2\">\n<li>懒惰渲染</li>\n</ol>\n<ul>\n<li>部署网站后,访问速度慢</li>\n<li>需要服务器\n缺点</li>\n<li>如果md文件多,可以渲染在时间小(基本上你应该没有1万个以上的md文件),</li>\n</ul>\n<h3 id=\"nginx%E9%83%A8%E7%BD%B2\" tabindex=\"-1\">nginx部署</h3>\n<h4 id=\"1.-%E5%88%9B%E5%BB%BA%E6%97%B6%E7%94%9F%E6%88%90json%E6%96%87%E4%BB%B6%E7%9A%84%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F\" tabindex=\"-1\">1. 创建时生成json文件的部署方式</h4>\n<p>nginx配置</p>\n<pre><code class=\"language-plaintext\">server  {\n\n  listen 8000;\n\n  root /path/to/blog;\n  index dist/index.html;\n\n# 如果请求md文件,就去找json文件\n  location ~ ^/(.*)\\.md$ {\n    default_type application/json;\n    try_files /dist/$1.json =404;\n  }\n\n# 如果请求html文件,那么选去dist下寻找\n  location ~ .*\\.html {\n    try_files /dist/$uri $uri =404;\n  }\n}\n\n</code></pre>\n<h4 id=\"2.cgi%E7%9A%84%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F\" tabindex=\"-1\">2.cgi的部署方式</h4>\n<pre><code class=\"language-plaintext\">sudo apt install nginx fcgiwrap spwan-cgi\ngit clone --depth 1 https://github.com/rbookr/staticBlogGen\ncd staticBlogGen\nyarn install\nyarn build\n</code></pre>\n<p>启动<code>spwan</code>程序</p>\n<pre><code>/usr/bin/spwan-cgi -f /usr/bin/fcgiwrap -p 8888\n</code></pre>\n<ul>\n<li>创建一个<code>/etc/nginx/conf.d/blog.conf</code>文件,拷贝下面的内容</li>\n<li>当然也可以直接下面的内容复制到<code>/etc/nginx/nginx.conf</code>里正确的位置</li>\n</ul>\n<pre><code>server {\n    listen 80; # 监听的端口\n    server_name 你的blog域名,例如 myblog.com; # 写你的blog域名\n\n    location = / {\n      root /path_to_blog/dist; # 你的上传blog的目录\n      index index.html;\n      try_files $uri/index.html $uri;\n    }\n\n    location ~ ^/assets { \n        root /path_to_blog/dist; # assets资源的访问\n    }\n\n    location / {\n      root /path_to_blog;\n    }\n\n    # markdown 渲染的cgi程序\n\tlocation ~ .*\\.md$ {\n\t\troot /home/rainboy/mycode/RainboyDefault/staticWebGen/cgi;\n\t\tfastcgi_pass 127.0.0.1:8081;\n\t\tfastcgi_index  index.cgi;\n\t\tfastcgi_param  SCRIPT_FILENAME    $document_root/staticWebGen.cgi;\n\t\tfastcgi_param  BLOG_ROOT /home/rainboy/mycode/RainboyDefault/blogData/;\n\t\tfastcgi_param  REQUEST_URI        staticWebGen.cgi;\n\n\t\tfastcgi_param  REQUEST_URI        $request_uri;\n\t\tfastcgi_param  REMOTE_ADDR        $remote_addr;\n\t\tfastcgi_param  REMOTE_PORT        $remote_port;\n\t\tfastcgi_param  SERVER_ADDR        $server_addr;\n\t\tfastcgi_param  SERVER_PORT        $server_port;\n\t\tfastcgi_param  SERVER_NAME        $server_name;\n\t\t#include fastcgi.conf;\n\t}\n}\n</code></pre>\n<h2 id=\"%E6%88%91%E9%9C%80%E8%A6%81%E7%9A%84%E5%8A%9F%E8%83%BD\" tabindex=\"-1\">我需要的功能</h2>\n<ul>\n<li>可以自定义渲染markdown的样式,<code>markdown-it</code>,可以写插件</li>\n<li>目录树对文章进行分类,而不是列表,方便查找</li>\n<li>前端可以查找文章,lur.js</li>\n<li>tab 可以现时打开多篇文章</li>\n</ul>\n<h2 id=\"%E6%88%91%E7%9A%84%E6%80%9D%E8%B7%AF\" tabindex=\"-1\">我的思路</h2>\n<p>使用vue3+vite实现</p>\n<p>其它项目需要用的时候,直接使用编译好的js文件</p>\n<p>流程</p>\n<p>数据格式</p>\n<pre><code>[\n  {\n    &quot;title&quot;:&quot;目录1&quot;\n    items:[\n      {\n        title:&quot;article title1&quot;,\n        ext:&quot;md&quot; | &quot;html&quot;\n        org: org_path\n        path:&quot;output/hash.html&quot;\n        children:[]\n      }\n      ...\n    ]\n  },\n  ...\n]\n</code></pre>\n<p>使用rsync上传整个blog目录</p>\n<pre><code>cd myblog\nrsync -avzP --delete . MYPS:/path_to_blog\n</code></pre>\n<h2 id=\"%E5%A6%82%E6%9E%9C%E8%B0%83%E8%AF%95\" tabindex=\"-1\">如果调试</h2>\n<pre><code>cd BlogData \n\npython3 -m http.server 8888\n</code></pre>\n<pre><code>cd this_project\nyarn dev\n</code></pre>\n<h2 id=\"markdown-it\" tabindex=\"-1\">markdown-it</h2>\n<p>所用到的插件:</p>\n<ul>\n<li>添加属性 <a href=\"https://github.com/arve0/markdown-it-attrs\">arve0/markdown-it-attrs: Add classes, identifiers and attributes to your markdown with {} curly brackets, similar to pandoc's header attributes</a></li>\n<li>为 markdown-it 设计的标题锚点生成. <a href=\"https://github.com/valeriangalliat/markdown-it-anchor/blob/master/README-zh_CN.md\">markdown-it-anchor/README-zh_CN.md at master · valeriangalliat/markdown-it-anchor</a></li>\n<li>Renders <code>[[x]]</code> as <code>&lt;kbd&gt;x&lt;/kbd&gt;</code> <a href=\"https://github.com/jGleitz/markdown-it-kbd\">jGleitz/markdown-it-kbd: markdown-it plugin for keystrokes. Renders <kbd>x</kbd> as <kbd>x</kbd></a></li>\n<li>parser, adding emoji &amp; emoticon syntax support. <a href=\"https://github.com/markdown-it/markdown-it-emoji\">markdown-it/markdown-it-emoji: Emoji syntax plugin for markdown-it markdown parser</a></li>\n<li>TOC work with markdown-it-anchor <a href=\"https://github.com/nagaozen/markdown-it-toc-done-right\">nagaozen/markdown-it-toc-done-right: A table of contents (TOC) plugin for Markdown-it with focus on semantic and security. Made to work gracefully with markdown-it-anchor.</a></li>\n</ul>\n<h2 id=\"%E6%84%9F%E8%B0%A2%E4%B8%8B%E9%9D%A2%E7%9A%84%E6%96%87%E7%AB%A0%E7%BB%99%E6%88%91%E6%8F%90%E4%BE%9B%E7%9A%84%E6%80%9D%E8%B7%AF\" tabindex=\"-1\">感谢下面的文章给我提供的思路</h2>\n<ul>\n<li>lunr.js 提供前端搜索功能</li>\n<li>提供了sideNavTree实现的思路 <a href=\"https://github.com/hyounoo/v-treeview\">hyounoo/v-treeview: A treeview component for Vue.js2</a></li>\n<li><a href=\"https://www.cnblogs.com/melancholys/p/16547793.html\">外部js调用vue事件方法 - MELANCHOLYS - 博客园</a></li>\n<li>给我提供了tabbar实现的思路 <a href=\"https://www.jianshu.com/p/78d09060bbb0\">vue 后台管理系统实现页面多tab，右键菜单关闭、刷新等功能 - 简书</a></li>\n<li><a href=\"https://juejin.cn/post/7073646687968821256\">vite打包lib库 - 掘金</a></li>\n<li><a href=\"https://dev.to/geowrgetudor/dealing-with-svg-icons-in-vue-vite-an9\">Dealing with SVG icons in Vue + Vite - DEV Community 👩‍💻👨‍💻</a></li>\n<li><a href=\"https://stackoverflow.com/questions/64758293/how-to-call-a-custom-vue-3-method-from-outside-vue-app-in-javascript\">vuejs3 - How to call a custom Vue 3 method from outside vue app in JavaScript? - Stack Overflow</a>\n还要加<code>defineExpose</code>才可以调用暴露的方法</li>\n</ul>\n<p>为什么我用vite+ts ,import vue 一直有Error TS7016\n<a href=\"https://github.com/vuematerial/vue-material/issues/530\">https://github.com/vuematerial/vue-material/issues/530</a></p>\n<p>ts 如何在window上添加数据</p>\n"}