import{_ as s,j as a,g as n,I as e}from"./chunks/framework.6fa7194a.js";const A=JSON.parse('{"title":"\u7B2C\u4E09\u7AE0 types and typeclasses","description":"","frontmatter":{},"headers":[{"level":2,"title":"1 believe the type \u76F8\u4FE1\u7C7B\u578B","slug":"_1-believe-the-type-\u76F8\u4FE1\u7C7B\u578B"},{"level":2,"title":"Type variables \u7C7B\u578B\u53D8\u91CF","slug":"type-variables-\u7C7B\u578B\u53D8\u91CF"},{"level":2,"title":"3 typeclasses 101 \u7C7B\u7C7B\u578B101","slug":"_3-typeclasses-101-\u7C7B\u7C7B\u578B101"}],"relativePath":"\u5B66\u4E60\u7B14\u8BB0/haskell/episode3.md"}'),l={name:"\u5B66\u4E60\u7B14\u8BB0/haskell/episode3.md"},p=e(`<h1 id="\u7B2C\u4E09\u7AE0-types-and-typeclasses" tabindex="-1">\u7B2C\u4E09\u7AE0 types and typeclasses <a class="header-anchor" href="#\u7B2C\u4E09\u7AE0-types-and-typeclasses" aria-hidden="true">#</a></h1><h2 id="_1-believe-the-type-\u76F8\u4FE1\u7C7B\u578B" tabindex="-1">1 believe the type \u76F8\u4FE1\u7C7B\u578B <a class="header-anchor" href="#_1-believe-the-type-\u76F8\u4FE1\u7C7B\u578B" aria-hidden="true">#</a></h2><p>\u4F7F\u7528<code>:t</code> \u6765\u5F97\u5230\u8868\u8FBE\u5F0F\u7684\u7C7B\u578B</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">ghci&gt; :t &#39;a&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">&#39;a&#39; :: Char</span></span>
<span class="line"><span style="color:#A6ACCD;">ghci&gt; :t &quot;a&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;a&quot; :: String</span></span>
<span class="line"><span style="color:#A6ACCD;">ghci&gt; :t 1</span></span>
<span class="line"><span style="color:#A6ACCD;">1 :: Num p =&gt; p</span></span>
<span class="line"><span style="color:#A6ACCD;">ghci&gt; :t True</span></span>
<span class="line"><span style="color:#A6ACCD;">True :: Bool</span></span>
<span class="line"><span style="color:#A6ACCD;">ghci&gt; :t &quot;HEL&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;HEL&quot; :: String</span></span>
<span class="line"><span style="color:#A6ACCD;">ghci&gt; :t (True,1)</span></span>
<span class="line"><span style="color:#A6ACCD;">(True,1) :: Num b =&gt; (Bool, b)</span></span>
<span class="line"><span style="color:#A6ACCD;">ghci&gt; :t (True,&#39;a&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">(True,&#39;a&#39;) :: (Bool, Char)</span></span>
<span class="line"><span style="color:#A6ACCD;">ghci&gt; </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u58F0\u660E\u51FD\u6570\u65F6\u7ED9\u5B83\u4E00\u4E2A\u7C7B\u578B</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">removeNonUppercase :: [Char] -&gt; [Char]   </span></span>
<span class="line"><span style="color:#A6ACCD;">removeNonUppercase st = [ c | c &lt;- st, c \`elem\` [&#39;A&#39;..&#39;Z&#39;]]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E00\u4E2A\u591A\u53C2\u6570\u51FD\u6570\u7684\u7C7B\u578B</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">addThree :: Int -&gt; Int -&gt; Int -&gt; Int   </span></span>
<span class="line"><span style="color:#A6ACCD;">addThree x y z = x + y + z</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E00\u4E9B\u5E38\u7528\u7684\u7C7B\u578B<code>Int,Integer,Float,Double,Bool,Char</code></p><h2 id="type-variables-\u7C7B\u578B\u53D8\u91CF" tabindex="-1">Type variables \u7C7B\u578B\u53D8\u91CF <a class="header-anchor" href="#type-variables-\u7C7B\u578B\u53D8\u91CF" aria-hidden="true">#</a></h2><p><code>head</code>\u51FD\u6570\u7684\u7C7B\u578B</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">ghci&gt; :t head</span></span>
<span class="line"><span style="color:#A6ACCD;">head :: [a] -&gt; a</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">ghci&gt; :t fst</span></span>
<span class="line"><span style="color:#A6ACCD;">fst :: (a, b) -&gt; a</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>a</code>\u662F\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF,\u8868\u793A\u5B83\u53EF\u4EE5\u662F\u4EFB\u4F55\u4E00\u79CD\u7C7B\u578B,\u5C31\u50CF\u5176\u5B83\u8BED\u8A00\u7684\u6CDB\u578B(generic) \u4E00\u6837</p><p>\u4F7F\u7528\u7C7B\u578B\u53D8\u91CF\u7684\u51FD\u6570,\u53EB\u505Apolymorphic function(\u591A\u6001\u51FD\u6570)</p><h2 id="_3-typeclasses-101-\u7C7B\u7C7B\u578B101" tabindex="-1">3 typeclasses 101 \u7C7B\u7C7B\u578B101 <a class="header-anchor" href="#_3-typeclasses-101-\u7C7B\u7C7B\u578B101" aria-hidden="true">#</a></h2><p>typeclass \u5B9A\u4E49\u4E86\u4E00\u7CFB\u5217\u7684\u63A5\u53E3</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">ghci&gt; :t (==)</span></span>
<span class="line"><span style="color:#A6ACCD;">(==) :: Eq a =&gt; a -&gt; a -&gt; Bool</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>Eq</code>\u662F\u4E00\u4E2A<code>typeclass</code></p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">ghci&gt; :t (&gt;)</span></span>
<span class="line"><span style="color:#A6ACCD;">(&gt;) :: Ord a =&gt; a -&gt; a -&gt; Bool</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,19),t=[p];function c(r,o,i,d,b,u){return n(),a("div",null,t)}var y=s(l,[["render",c]]);export{A as __pageData,y as default};
