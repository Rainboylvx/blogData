import{_ as l,j as p,k as s,z as c,x as a,I as e,t as o,g as t}from"./chunks/framework.6fa7194a.js";var i="/assets/tinyasync.c554cc2e.jpg";const T=JSON.parse('{"title":"3 \u7B2C\u4E09\u90E8\u5206 spawn","description":"","frontmatter":{},"headers":[{"level":2,"title":"3 \u7B2C\u4E09\u90E8\u5206 spawn","slug":"_3-\u7B2C\u4E09\u90E8\u5206-spawn"},{"level":2,"title":"4 \u7B2C\u56DB\u90E8\u5206 IoContext and connection","slug":"_4-\u7B2C\u56DB\u90E8\u5206-iocontext-and-connection"},{"level":2,"title":"5 \u7B2C\u4E94\u90E8\u5206 Acceptor","slug":"_5-\u7B2C\u4E94\u90E8\u5206-acceptor"},{"level":2,"title":"6 TimerAwaiter \u5B9A\u65F6\u5668\u76F8\u5173","slug":"_6-timerawaiter-\u5B9A\u65F6\u5668\u76F8\u5173"},{"level":2,"title":"1 Q AsyncReceiveAwaiter\u4E2D\u7684\u94FE\u8868\u6709\u4F1A\u7528?\u4E3A\u4EC0\u4E48","slug":"_1-q-asyncreceiveawaiter\u4E2D\u7684\u94FE\u8868\u6709\u4F1A\u7528-\u4E3A\u4EC0\u4E48"},{"level":2,"title":"2 Q \u600E\u4E48\u7528\u56FE\u6765\u63CF\u8FF0\u8FD9\u4E2A\u6A21\u578B?","slug":"_2-q-\u600E\u4E48\u7528\u56FE\u6765\u63CF\u8FF0\u8FD9\u4E2A\u6A21\u578B"}],"relativePath":"\u6E90\u7801\u89E3\u8BFB/tinyasync/first.md"}'),r={name:"\u6E90\u7801\u89E3\u8BFB/tinyasync/first.md"},d=s("p",null,"\u6574\u4E2A\u4EE3\u78011300\u591A\u884C",-1),u=s("p",null,"\u5206\u6210\u4EE5\u51E0\u4E2A\u90E8\u5206",-1),A=s("li",null,"io_context io\u4E8B\u4EF6\u7684\u5206\u53D1\u4E2D\u5FC3",-1),_=s("li",null,"connect \u62BD\u8C61\u51FA\u6765\u4E00\u6B21\u8FDE\u63A5,\u5F02\u6B65\u7684\u63A5\u6536\u4E0E\u53D1\u9001",-1),y=s("li",null,"AsyncSendAwaiter \u5F02\u6B65\u7684\u7B49\u5F85\u53D1\u9001,\u76F4\u63A5io_context\u901A\u77E5\u53EF\u4EE5\u53D1\u9001",-1),b=s("li",null,"AsyncReceiveAwaiter \u5F02\u6B65\u7684\u7B49\u5F85\u63A5\u6536,\u76F4\u63A5io_context\u901A\u77E5\u53EF\u4EE5\u63A5\u6536",-1),m=s("li",null,"Acceptor \u4E00\u7CFB\u5217\u7528\u4E8E\u5904\u7406\u65B0\u8FDE\u63A5\u7684",-1),C=s("li",null,"spawn \u4E00\u4E2A\u534F\u7A0B,\u76EE\u7684\u662F\u628A\u4E00\u4E2Atask \u53D8\u6210\u4E0D\u7528\u518D\u5173\u5FC3\u7684\u534F\u7A0B, \u8FD9\u4E2Atask\u662F\u4F1A\u65E0\u9650\u7684\u5FAA\u73AF,\u5904\u7406\u6307\u5B9A\u7684\u4EFB\u52A1",-1),D=e(`<p>1 \u7B2C\u4E00\u90E8\u5206 log</p><p>2 \u7B2C\u4E8C\u90E8\u5206 name\u76F8\u5173</p><ul><li><code>set_name</code></li><li><code>set_name_r</code></li><li><code>NamedMixin</code>,\u7EE7\u627F\u81EA\u8FD9\u4E2A\u7C7B,\u90A3\u4E48\u5177\u4F53\u53EF\u4EE5\u81EA\u8EAB<code>m_h</code>\u53D6\u540D\u5B57\u7684\u80FD\u529B</li></ul><p>\u7ED9\u6BCF\u4E00\u4E2A<code>std::coroutine_handle</code>\u53D6\u4E2A\u540D\u5B57</p><p>3 \u7B2C\u4E09\u90E8\u5206</p><p>task\u7C7B\u7684\u5B9A\u4E49</p><p>\u795E\u5947\u5728\u662F<code>promise_type</code>\u91CC\u6709\u4E00\u4E2A<code>std::coroutine_handle&lt;&gt; m_continue = nullptr</code> \u7684\u4E1C\u897F.\u5F53\u524D\u7684task\u6267\u884C\u5B8C\u540E,\u6267\u884C\u4E0B\u4E00\u4E2A?</p><p>\u8FD9\u4E2A<code>m_continue</code>\u662F\u4E0B\u9762\u7684\u4EE3\u7801\u91CC\u7684<code>Awaiter</code>\u7ED9\u5B83\u7684</p><p>\u540C\u65F6task\u672C\u8EAB\u662F\u53EF\u4EE5<code>co_await</code>\u7684 \u5148\u628A\u81EA\u5DF1\u6302\u8D77\u6765</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#FFCB6B;">task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">func1</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">func2</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> task1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">func1</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">co_await</span><span style="color:#A6ACCD;"> task1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5F53\u53E6\u4E00\u4E2A\u534F\u7A0Bb\u5185<code>co_await a</code>\u65F6,b\u4F1A\u6302\u8D77,a\u7684\u5185\u90E8\u8BB0\u5F55<code>m_continue = b \u7684corotine hanele</code><code>resume a</code></p><p>\u8BA9b\u6302\u8D77,a\u6267\u884C,\u8FD4\u56DE\u6267\u884Cb\u7684caler \u5982\u679Ca\u6267\u884C\u7ED3\u679C\u5230\u8FBE\u4E86,<code>a.promise().final_suspend</code> \u8FD4\u56DE\u4E00\u4E2AFinalAwaiter</p><p>\u6D4B\u8BD5\u4EE3\u7801\u89C1:</p>`,13),F=e(`<h2 id="_3-\u7B2C\u4E09\u90E8\u5206-spawn" tabindex="-1">3 \u7B2C\u4E09\u90E8\u5206 spawn <a class="header-anchor" href="#_3-\u7B2C\u4E09\u90E8\u5206-spawn" aria-hidden="true">#</a></h2><p>spawn\u4ECE\u5B57\u9762\u610F\u601D\u662F\u521B\u5EFA\u4E00\u4E2A\u4E0D\u7528\u518D\u5173\u5FC3\u7684\u534F\u7A0B</p><p>\u4F7F\u7528\u4EE3\u7801\u5982\u4E0B</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#FFCB6B;">Spawn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">co_spawn</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">awaitable</span><span style="color:#A6ACCD;"> awaiter</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">co_await</span><span style="color:#A6ACCD;"> awaiter</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //B</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">myfunc</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">  await </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#A6ACCD;"> something</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// A</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">func2</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">co_spawn</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">myfunc</span><span style="color:#89DDFF;">());</span><span style="color:#676E95;font-style:italic;"> //x</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol><li>x\u5904\u8C03\u7528co_spawn</li><li>myfunc() \u4F1A\u6302\u8D77\u5728<code>initial_suspend</code></li><li>B\u5904\u8C03\u7528<code>myfunc().Awater::resume</code></li><li>\u6267\u884C\u5230A\u5904,myfunc,\u6302\u8D77,</li><li>myfunc \u53EF\u80FD\u4F1A\u88AB\u5176\u5B83\u51FD\u6570resume,</li><li>\u53EF\u77E5,\u5F53<code>myfunc()</code>\u7ED3\u675F(<code>final_suspend</code>),<code>co_spawn</code>\u4F1A\u88AB <code>m_continue</code>\u88ABresume,\u8FDB\u800CB\u5904\u7ED3\u675F</li></ol><p><code>spawn</code></p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">initial_suspend  nerver</span></span>
<span class="line"><span style="color:#A6ACCD;">final_suspend  nerver</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8FC7\u4E86\u4E00\u6BB5\u65F6\u95F4\u540E,\u8FD8\u662F\u4E0D\u61C2<code>co_spawn</code>\u8FD0\u884C\u7684\u539F\u7406,\u4E0B\u9762\u5199\u4E00\u4E2A\u5B8C\u6574\u7684\u4EE3\u7801,\u5BF9\u5E94<code>https://cpphub.roj.ac.cn/cpp20/corountines/</code> \u6765\u7406\u89E3</p><ul><li><strong>\u4E3A\u4EC0\u4E48co_spawn\u53EF\u4EE5</strong>\u4E0D\u5728\u7BA1\u51FD\u6570\u7684\u8FD0\u884C\u4E86</li><li><code>co_spawn</code>\u5185\u7684\u534F\u7A0B\u6302\u8D77\u6765\u4F1A\u8FD4\u56DE\u54EA\u91CC? \u666E\u901A\u51FD\u6570F\u8C03\u7528\u534F\u7A0BA, \u534F\u7A0BA\u8C03\u7528\u534F\u7A0BB,\u90A3\u4E48B\u6302\u8D77\u540E,\u8FD4\u56DE\u5230caller, \u90A3\u4E48\u8FD9\u4E2Acaller\u662FB,\u8FD8F</li></ul><p>\u5728\u4E00\u4E2A\u534F\u7A0B\u5185\u8C03\u7528\u53E6\u4E00\u4E2A\u534F\u7A0B,</p><div class="language-plaintext line-numbers-mode"><button class="copy"></button><span class="lang">plaintext</span><pre><code><span class="line"><span style="color:#A6ACCD;">       co_spawn    coroutineA</span></span>
<span class="line"><span style="color:#A6ACCD;">      +------+    +------+</span></span>
<span class="line"><span style="color:#A6ACCD;">f --&gt; |      |--&gt; |      |</span></span>
<span class="line"><span style="color:#A6ACCD;">      |      |    |      |</span></span>
<span class="line"><span style="color:#A6ACCD;">      +------+    +------+</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_4-\u7B2C\u56DB\u90E8\u5206-iocontext-and-connection" tabindex="-1">4 \u7B2C\u56DB\u90E8\u5206 IoContext and connection <a class="header-anchor" href="#_4-\u7B2C\u56DB\u90E8\u5206-iocontext-and-connection" aria-hidden="true">#</a></h2><ul><li>Callback\u7684\u865A\u51FD\u6570</li></ul><p>\u6838\u5FC3\u5728<code>run</code>,\u4ECEepoll\u4E2D\u53D6\u51FA\u4E8B\u4EF6,\u8C03\u7528<code>evt.data.prt</code>\u5BF9\u5E94\u7684callback</p><ul><li>protocal</li><li>Address::any()</li><li><code>endpoint-&gt;{adress,point}</code></li><li>setnonblocking</li></ul><p>AsyncReceiveAwaiter: \u6838\u5FC3,\u6302\u8D77\u6765\u8FD9\u540E\u5728<code>await_suspend</code>\u91CC\u505A\u7684\u4E8B</p><p>AsyncSendAwaiter,\u6838\u5FC3\u540C\u4E0A</p><p>ConnImpl,\u8FDE\u63A5\u7684\u62BD\u8C61</p><ul><li>\u628Asocket\u52A0\u5165\u5230epoll\u4E2D</li><li>\u65B9\u6CD5<code>async_receive</code> \u751F\u6210<code>AsyncReceiveAwaiter</code></li><li>\u5B9A\u4E49\u4E86\u4E00\u4E2Acallback,\u5904\u7406\u4E8B\u4EF6</li></ul><h2 id="_5-\u7B2C\u4E94\u90E8\u5206-acceptor" tabindex="-1">5 \u7B2C\u4E94\u90E8\u5206 Acceptor <a class="header-anchor" href="#_5-\u7B2C\u4E94\u90E8\u5206-acceptor" aria-hidden="true">#</a></h2><p>\u4EA7\u751F\u4E00\u4E2Aconnection</p><p>\u4F7F\u7528</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">Task listen(IoContext &amp;ctx, Name=&quot;listen&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">	Acceptor acceptor(ctx, Protocol::ip_v4(), Endpoint(Address::Any(), 8899));</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">	for (;;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">		Connection conn = co_await acceptor.async_accept();</span></span>
<span class="line"><span style="color:#A6ACCD;">		co_spawn(echo(ctx, std::move(conn)), &quot;spawn echo&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>AcceptAwaiter</li><li>AcceptorImpl</li><li>Acceptor \u5BF9\u4E0A\u9762\u7684\u7B80\u5355\u5305\u88C5</li></ul><p>AcceptorImpl \u6784\u9020\u7684\u8FC7\u7A0B</p><ol><li>open</li></ol><ul><li><code>auto listenfd = ::socket(PF_INET, SOCK_STREAM, 0);</code>\u521B\u5EFAfd</li><li><code>setnonblocking</code></li></ul><ol start="2"><li>bind</li></ol><ul><li><code>sockaddr_in serveraddr;</code>\u521B\u5EFA\u5E76\u586B\u5145\u6570\u636E</li><li><code>auto binderr = ::bind(listenfd, (sockaddr *)&amp;serveraddr, sizeof(serveraddr));</code></li></ul><ol start="3"><li>listen</li></ol><ul><li><code>int err = ::listen(listenfd, max_pendding_connection);</code></li><li>\`auto fd3 = epoll_ctl(m_ctx-&gt;handle(), EPOLL_CTL_ADD, listenfd, &amp;evt);</li></ul><h2 id="_6-timerawaiter-\u5B9A\u65F6\u5668\u76F8\u5173" tabindex="-1">6 TimerAwaiter \u5B9A\u65F6\u5668\u76F8\u5173 <a class="header-anchor" href="#_6-timerawaiter-\u5B9A\u65F6\u5668\u76F8\u5173" aria-hidden="true">#</a></h2><p>\u6211\u6CA1\u6709\u770B</p><h2 id="_1-q-asyncreceiveawaiter\u4E2D\u7684\u94FE\u8868\u6709\u4F1A\u7528-\u4E3A\u4EC0\u4E48" tabindex="-1">1 Q AsyncReceiveAwaiter\u4E2D\u7684\u94FE\u8868\u6709\u4F1A\u7528?\u4E3A\u4EC0\u4E48 <a class="header-anchor" href="#_1-q-asyncreceiveawaiter\u4E2D\u7684\u94FE\u8868\u6709\u4F1A\u7528-\u4E3A\u4EC0\u4E48" aria-hidden="true">#</a></h2><p>\u591A\u6B21\u53D1\u9001?</p><h2 id="_2-q-\u600E\u4E48\u7528\u56FE\u6765\u63CF\u8FF0\u8FD9\u4E2A\u6A21\u578B" tabindex="-1">2 Q \u600E\u4E48\u7528\u56FE\u6765\u63CF\u8FF0\u8FD9\u4E2A\u6A21\u578B? <a class="header-anchor" href="#_2-q-\u600E\u4E48\u7528\u56FE\u6765\u63CF\u8FF0\u8FD9\u4E2A\u6A21\u578B" aria-hidden="true">#</a></h2><p><img src="`+i+'" alt=""></p><p>\u6BCF\u4E2A<code>awaiter</code>\u7684callback\u5728\u54EA\u91CC?</p>',38);function h(w,f,v,g,x,k){const n=o("toGitLink");return t(),p("div",null,[d,u,s("ul",null,[s("li",null,[c("log,\u65E5\u5FD7\u90E8\u5206,\u7528\u6765\u8868\u660E\u6574\u4E2A\u4EE3\u7801\u8FD0\u884C\u7684\u8FC7\u7A0B,\u5177\u4F53\u770B,\u8FD9\u4E2A\u63D0\u53D6\u51FA\u6765\u7684\u4EE3\u7801: "),a(n,{file:"./code_first/log.cpp"})]),A,_,y,b,m,C]),D,a(n,{file:"./code_first/task.cpp"}),F])}var S=l(r,[["render",h]]);export{T as __pageData,S as default};
